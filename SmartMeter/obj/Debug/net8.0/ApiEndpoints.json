[
  {
    "ContainingType": "SmartMeter.Controllers.AuthController",
    "Method": "AdminCheck",
    "RelativePath": "api/Auth/Admin-end points",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartMeter.Controllers.AuthController",
    "Method": "AuthCheck",
    "RelativePath": "api/Auth/Auth-end points",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartMeter.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SmartMeter.Models.DTOs.UserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartMeter.Models.DTOs.TokenResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartMeter.Controllers.AuthController",
    "Method": "RefreshToken",
    "RelativePath": "api/Auth/refresh-token",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SmartMeter.Models.DTOs.RefreshTokenRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartMeter.Models.DTOs.TokenResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartMeter.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SmartMeter.Models.DTOs.UserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartMeter.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartMeter.Controllers.PhotoController",
    "Method": "UploadConsumerPhoto",
    "RelativePath": "api/consumers/{consumerId}/Photo",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "consumerId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "File",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartMeter.Models.DTOs.PhotoResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartMeter.Controllers.PhotoController",
    "Method": "DeleteConsumerPhoto",
    "RelativePath": "api/consumers/{consumerId}/Photo",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "consumerId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartMeter.Controllers.PhotoController",
    "Method": "GetConsumerPhoto",
    "RelativePath": "api/consumers/{consumerId}/Photo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "consumerId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartMeter.Models.DTOs.PhotoResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartMeter.Controllers.PhotoController",
    "Method": "DownloadConsumerPhoto",
    "RelativePath": "api/consumers/{consumerId}/Photo/download",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "consumerId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartMeter.Controllers.UserController",
    "Method": "ChangePassword",
    "RelativePath": "api/User/change-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SmartMeter.Models.DTOs.ChangePasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartMeter.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[SmartMeter.WeatherForecast, SmartMeter, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]